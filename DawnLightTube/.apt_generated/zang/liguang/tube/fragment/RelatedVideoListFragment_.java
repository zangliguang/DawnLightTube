//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.2.
//


package zang.liguang.tube.fragment;

import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.support.v4.widget.SwipeRefreshLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ProgressBar;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;
import zang.liguang.tube.R.layout;
import zang.liguang.tube.adapter.RelativeVideoAdapter_;
import zang.liguang.tube.bean.YouTubeVideoModle;
import zang.liguang.tube.wedget.swiptlistview.SwipeListView;

public final class RelatedVideoListFragment_
    extends zang.liguang.tube.fragment.RelatedVideoListFragment
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    public final static String YOU_TUBE_VIDEO_MODLE_ARG = "youTubeVideoModle";
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(layout.activity_main, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        contentView_ = null;
        super.onDestroyView();
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectFragmentArguments_();
        relativeVideoAdapter = RelativeVideoAdapter_.getInstance_(getActivity());
        init();
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static RelatedVideoListFragment_.FragmentBuilder_ builder() {
        return new RelatedVideoListFragment_.FragmentBuilder_();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        swipeLayout = ((SwipeRefreshLayout) hasViews.findViewById(zang.liguang.tube.R.id.swipe_container));
        mListView = ((SwipeListView) hasViews.findViewById(zang.liguang.tube.R.id.listview));
        mProgressBar = ((ProgressBar) hasViews.findViewById(zang.liguang.tube.R.id.progressBar));
        if (mListView!= null) {
            mListView.setOnItemClickListener(new OnItemClickListener() {


                @Override
                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                    RelatedVideoListFragment_.this.onItemClick(position);
                }

            }
            );
        }
        initView();
    }

    private void injectFragmentArguments_() {
        Bundle args_ = getArguments();
        if (args_!= null) {
            if (args_.containsKey(YOU_TUBE_VIDEO_MODLE_ARG)) {
                youTubeVideoModle = ((YouTubeVideoModle) args_.getSerializable(YOU_TUBE_VIDEO_MODLE_ARG));
            }
        }
    }

    @Override
    public void getResult(final String result) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                RelatedVideoListFragment_.super.getResult(result);
            }

        }
        );
    }

    @Override
    public void loadNewList(final String url) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    RelatedVideoListFragment_.super.loadNewList(url);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<RelatedVideoListFragment_.FragmentBuilder_, zang.liguang.tube.fragment.RelatedVideoListFragment>
    {


        @Override
        public zang.liguang.tube.fragment.RelatedVideoListFragment build() {
            RelatedVideoListFragment_ fragment_ = new RelatedVideoListFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }

        public RelatedVideoListFragment_.FragmentBuilder_ youTubeVideoModle(YouTubeVideoModle youTubeVideoModle) {
            args.putSerializable(YOU_TUBE_VIDEO_MODLE_ARG, youTubeVideoModle);
            return this;
        }

    }

}
